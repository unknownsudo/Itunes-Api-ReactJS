{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ika\\\\Desktop\\\\Itunes-Api-ReactJS\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchBar from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchWord, setSearchWord] = useState('eminem');\n  const [Artist, setArtist] = useState(null);\n  const [view, setView] = useState( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"no data received\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 37\n  }, this));\n  useEffect(() => {\n    fetch(`https://itunes.apple.com/search?term=${searchWord}`).then(response => response.json()).then(data => {\n      console.log(data);\n      const mapi = data.results.map(track => {\n        return {\n          artistName: track.artistName,\n          trackName: track.trackName,\n          collectionName: track.collectionName,\n          link: track.collectionViewUrl\n        };\n      });\n      setArtist(mapi);\n    });\n  }, [searchWord]);\n  useEffect(() => {\n    if (!!Artist) {\n      const temp = Artist.map(track => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"artist-name\",\n          children: track.artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"music-name\",\n          children: track.trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"album-name\",\n          children: track.collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"link\",\n          target: \"_blank\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"linki\",\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 45\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this));\n      setView(temp);\n    }\n  }, [Artist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchh: word => {\n        setSearchWord(word);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), view]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PU/qrfM2EbGCDxhy1HBwF+Zp+hs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ika/Desktop/Itunes-Api-ReactJS/src/App.js"],"names":["React","useEffect","useState","SearchBar","App","searchWord","setSearchWord","Artist","setArtist","view","setView","fetch","then","response","json","data","console","log","mapi","results","map","track","artistName","trackName","collectionName","link","collectionViewUrl","temp","word"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,QAAD,CAA5C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAF,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,wCAAuCN,UAAW,EAApD,CAAL,CACGO,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,IAAI,GAAGH,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACrC,eAAO;AACLC,UAAAA,UAAU,EAAED,KAAK,CAACC,UADb;AAELC,UAAAA,SAAS,EAAEF,KAAK,CAACE,SAFZ;AAGLC,UAAAA,cAAc,EAAEH,KAAK,CAACG,cAHjB;AAILC,UAAAA,IAAI,EAAEJ,KAAK,CAACK;AAJP,SAAP;AAMD,OAPY,CAAb;AAQAlB,MAAAA,SAAS,CAACU,IAAD,CAAT;AACD,KAbH;AAeD,GAhBQ,EAgBN,CAACb,UAAD,CAhBM,CAAT;AAkBAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC,CAACM,MAAN,EAAc;AACZ,YAAMoB,IAAI,GAAGpB,MAAM,CAACa,GAAP,CAAWC,KAAK,iBAC3B;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BA,KAAK,CAACC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BD,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BF,KAAK,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAG,UAAA,IAAI,EAAE,MAAT;AAAiB,UAAA,MAAM,EAAC,QAAxB;AAAA,uCAAkC;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,CAAb;AAQAd,MAAAA,OAAO,CAACiB,IAAD,CAAP;AACD;AACF,GAZQ,EAYN,CAACpB,MAAD,CAZM,CAAT;AAcA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAGqB,IAAD,IAAU;AAAEtB,QAAAA,aAAa,CAACsB,IAAD,CAAb;AAAqB;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGnB,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5CQL,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport SearchBar from './Search';\r\n\r\nfunction App() {\r\n\r\n  const [searchWord, setSearchWord] = useState('eminem');\r\n  const [Artist, setArtist] = useState(null);\r\n  const [view, setView] = useState((<div>no data received</div>));\r\n\r\n  useEffect(() => {\r\n    fetch(`https://itunes.apple.com/search?term=${searchWord}`)\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        const mapi = data.results.map(track => {\r\n          return {\r\n            artistName: track.artistName,\r\n            trackName: track.trackName,\r\n            collectionName: track.collectionName,\r\n            link: track.collectionViewUrl\r\n          }\r\n        });\r\n        setArtist(mapi);\r\n      });\r\n\r\n  }, [searchWord]);\r\n\r\n  useEffect(() => {\r\n    if (!!Artist) {\r\n      const temp = Artist.map(track => (\r\n        <ul>\r\n          <li className=\"artist-name\">{track.artistName}</li>\r\n          <li className=\"music-name\">{track.trackName}</li>\r\n          <li className=\"album-name\">{track.collectionName}</li>\r\n          <a href={\"link\"} target=\"_blank\"> <li className=\"linki\">Link</li> </a>\r\n        </ul>\r\n      ));\r\n      setView(temp);\r\n    }\r\n  }, [Artist])\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar searchh={(word) => { setSearchWord(word) }} />\r\n      {view}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}